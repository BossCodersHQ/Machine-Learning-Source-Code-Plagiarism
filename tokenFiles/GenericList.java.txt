CompilationUnit 
ClassDeclaration name= GenericList 
FieldDeclaration 
BasicType name= int 
VariableDeclarator name= DEFAULT_CAP 
Literal value= 10 
FieldDeclaration 
ReferenceType name= Object 
VariableDeclarator name= iValues 
FieldDeclaration 
BasicType name= int 
VariableDeclarator name= iSize 
MethodDeclaration name= add 
FormalParameter name= x 
ReferenceType name= Object 
StatementExpression 
MethodInvocation 
MemberReference 
MemberReference 
MethodDeclaration name= get 
ReferenceType name= Object 
FormalParameter name= pos 
BasicType name= int 
ReturnStatement 
MemberReference 
ArraySelector 
MemberReference 
MethodDeclaration name= insert 
FormalParameter name= pos 
BasicType name= int 
FormalParameter name= obj 
ReferenceType name= Object 
StatementExpression 
MethodInvocation 
ForStatement 
ForControl 
VariableDeclaration 
BasicType name= int 
VariableDeclarator name= i 
MemberReference 
BinaryOperation 
MemberReference 
MemberReference 
MemberReference 
BlockStatement 
StatementExpression 
Assignment value= MemberReference(member=iValues, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-))]) 
MemberReference 
ArraySelector 
MemberReference 
MemberReference 
ArraySelector 
BinaryOperation 
MemberReference 
Literal value= 1 
StatementExpression 
Assignment value= MemberReference(member=obj, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]) 
MemberReference 
ArraySelector 
MemberReference 
MemberReference 
StatementExpression 
MemberReference 
MethodDeclaration name= remove 
ReferenceType name= Object 
FormalParameter name= pos 
BasicType name= int 
LocalVariableDeclaration 
ReferenceType name= Object 
VariableDeclarator name= removedValue 
MemberReference 
ArraySelector 
MemberReference 
ForStatement 
ForControl 
VariableDeclaration 
BasicType name= int 
VariableDeclarator name= i 
MemberReference 
BinaryOperation 
MemberReference 
BinaryOperation 
MemberReference 
Literal value= 1 
MemberReference 
StatementExpression 
Assignment value= MemberReference(member=iValues, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=+))]) 
MemberReference 
ArraySelector 
MemberReference 
MemberReference 
ArraySelector 
BinaryOperation 
MemberReference 
Literal value= 1 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=null) 
MemberReference 
ArraySelector 
BinaryOperation 
MemberReference 
Literal value= 1 
Literal value= null 
StatementExpression 
MemberReference 
ReturnStatement 
MemberReference 
MethodDeclaration name= ensureCapcity 
IfStatement 
BinaryOperation 
MemberReference 
MemberReference 
StatementExpression 
MethodInvocation 
MethodDeclaration name= size 
BasicType name= int 
ReturnStatement 
MemberReference 
MethodDeclaration name= resize 
LocalVariableDeclaration 
ReferenceType name= Object 
VariableDeclarator name= temp 
ArrayCreator 
ReferenceType name= Object 
BinaryOperation 
MemberReference 
Literal value= 2 
StatementExpression 
MethodInvocation 
MemberReference 
Literal value= 0 
MemberReference 
Literal value= 0 
MemberReference 
StatementExpression 
Assignment value= MemberReference(member=temp, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]) 
MemberReference 
MemberReference 
MethodDeclaration name= toString 
ReferenceType name= String 
LocalVariableDeclaration 
ReferenceType name= String 
VariableDeclarator name= result 
BinaryOperation 
BinaryOperation 
Literal value= "size: " 
MemberReference 
Literal value= ", elements: [" 
ForStatement 
ForControl 
VariableDeclaration 
BasicType name= int 
VariableDeclarator name= i 
Literal value= 0 
BinaryOperation 
MemberReference 
BinaryOperation 
MemberReference 
Literal value= 1 
MemberReference 
StatementExpression 
Assignment value= BinaryOperation(operandl=MemberReference(member=iValues, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[], member=toString, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=", "), operator=+) 
MemberReference 
BinaryOperation 
MemberReference 
ArraySelector 
MemberReference 
MethodInvocation 
Literal value= ", " 
IfStatement 
BinaryOperation 
MemberReference 
Literal value= 0 
StatementExpression 
Assignment value= MemberReference(member=iValues, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[ArraySelector(index=BinaryOperation(operandl=MemberReference(member=iSize, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=1), operator=-))]) 
MemberReference 
MemberReference 
ArraySelector 
BinaryOperation 
MemberReference 
Literal value= 1 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="]") 
MemberReference 
Literal value= "]" 
ReturnStatement 
MemberReference 
MethodDeclaration name= toStringUsingStringBuffer 
ReferenceType name= String 
LocalVariableDeclaration 
ReferenceType name= StringBuffer 
VariableDeclarator name= result 
ClassCreator 
ReferenceType name= StringBuffer 
StatementExpression 
MethodInvocation 
Literal value= "size: " 
StatementExpression 
MethodInvocation 
MemberReference 
StatementExpression 
MethodInvocation 
Literal value= ", elements: [" 
ForStatement 
ForControl 
VariableDeclaration 
BasicType name= int 
VariableDeclarator name= i 
Literal value= 0 
BinaryOperation 
MemberReference 
BinaryOperation 
MemberReference 
Literal value= 1 
MemberReference 
BlockStatement 
StatementExpression 
MethodInvocation 
MemberReference 
ArraySelector 
MemberReference 
StatementExpression 
MethodInvocation 
Literal value= ", " 
IfStatement 
BinaryOperation 
MemberReference 
Literal value= 0 
StatementExpression 
MethodInvocation 
MemberReference 
ArraySelector 
BinaryOperation 
MemberReference 
Literal value= 1 
StatementExpression 
MethodInvocation 
Literal value= "]" 
ReturnStatement 
MethodInvocation 
ConstructorDeclaration name= GenericList 
StatementExpression 
ExplicitConstructorInvocation 
MemberReference 
ConstructorDeclaration name= GenericList 
FormalParameter name= initialCap 
BasicType name= int 
AssertStatement value= BinaryOperation(operandl=BinaryOperation(operandl=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="Violation of precondition. IntListVer1(int initialCap):"), operandr=Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value="initialCap must be greater than 0. Value of initialCap: "), operator=+), operandr=MemberReference(member=initialCap, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]), operator=+) 
BinaryOperation 
MemberReference 
Literal value= 0 
BinaryOperation 
BinaryOperation 
Literal value= "Violation of precondition. IntListVer1(int initialCap):" 
Literal value= "initialCap must be greater than 0. Value of initialCap: " 
MemberReference 
StatementExpression 
Assignment value= ArrayCreator(dimensions=[MemberReference(member=initialCap, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])], initializer=None, postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], type=ReferenceType(arguments=None, dimensions=None, name=Object, sub_type=None)) 
MemberReference 
ArrayCreator 
ReferenceType name= Object 
MemberReference 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=0) 
MemberReference 
Literal value= 0 
MethodDeclaration name= equals 
BasicType name= boolean 
FormalParameter name= other 
ReferenceType name= Object 
LocalVariableDeclaration 
BasicType name= boolean 
VariableDeclarator name= result 
IfStatement 
BinaryOperation 
MemberReference 
Literal value= null 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false) 
MemberReference 
Literal value= false 
IfStatement 
BinaryOperation 
This 
MemberReference 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=true) 
MemberReference 
Literal value= true 
IfStatement 
BinaryOperation 
This 
MethodInvocation 
MethodInvocation 
StatementExpression 
Assignment value= Literal(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[], value=false) 
MemberReference 
Literal value= false 
BlockStatement 
LocalVariableDeclaration 
ReferenceType name= GenericList 
VariableDeclarator name= otherList 
Cast 
ReferenceType name= GenericList 
MemberReference 
StatementExpression 
Assignment value= BinaryOperation(operandl=This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MethodInvocation(arguments=[], member=size, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]), operandr=MethodInvocation(arguments=[], member=size, postfix_operators=[], prefix_operators=[], qualifier=otherList, selectors=[], type_arguments=None), operator===) 
MemberReference 
BinaryOperation 
This 
MethodInvocation 
MethodInvocation 
LocalVariableDeclaration 
BasicType name= int 
VariableDeclarator name= i 
Literal value= 0 
WhileStatement 
BinaryOperation 
BinaryOperation 
MemberReference 
MemberReference 
MemberReference 
BlockStatement 
StatementExpression 
Assignment value= This(postfix_operators=[], prefix_operators=[], qualifier=None, selectors=[MemberReference(member=iValues, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None), ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[])), MethodInvocation(arguments=[MemberReference(member=iValues, postfix_operators=[], prefix_operators=[], qualifier=otherList, selectors=[ArraySelector(index=MemberReference(member=i, postfix_operators=[], prefix_operators=[], qualifier=, selectors=[]))])], member=equals, postfix_operators=None, prefix_operators=None, qualifier=None, selectors=None, type_arguments=None)]) 
MemberReference 
This 
MemberReference 
ArraySelector 
MemberReference 
MethodInvocation 
MemberReference 
ArraySelector 
MemberReference 
StatementExpression 
MemberReference 
ReturnStatement 
MemberReference 
